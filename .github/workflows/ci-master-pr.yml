name: ci-master-pr

on:
  push:
    branches:
    - master
    tags:
    - '**'
  pull_request:
    branches:
    - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Test (integration)
      run: |
        set -eu
        docker-compose up --build -d
        docker-compose -f docker-compose.test.yml up

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Display system info (linux)
      run: |
        set -e
        hostname
        whoami
        cat /etc/*release
        lscpu
        free
        df -h
        pwd
        docker info
        docker version

    # See: https://github.com/docker/build-push-action/blob/v2.6.1/docs/advanced/cache.md#github-cache
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Prepare
      id: prep
      run: |
        set -e

        # Get 'namespace' and 'project-name' from 'namespace/project-name'
        # CI_PROJECT_NAMESPACE=$( echo "${{ github.repository }}" | cut -d '/' -f 1 )
        # CI_PROJECT_NAME=$( echo "${{ github.repository }}" | cut -d '/' -f 2 )

        # Lowercase 'namespace/project-name' for docker image tag. E.g. 'startersclan/ASP' to 'startersclan/asp'
        GITHUB_REPOSITORY_LOWERCASED="$( echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' )" # Lowercase

        # Get ref, i.e. <branch_name> from refs/heads/<branch_name>, or <tag-name> from refs/tags/<tag_name>. E.g. 'master' or 'v1.2.3'
        REF=$( echo "${GITHUB_REF}" | rev | cut -d '/' -f 1 | rev )

        # Get commit hash E.g. 'b29758a'
        SHA_SHORT=$( echo "${GITHUB_SHA}" | cut -c1-7 )

        # Pass variables to next step
        # echo "CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE" >> $GITHUB_ENV
        # echo "CI_PROJECT_NAME=$CI_PROJECT_NAME" >> $GITHUB_ENV
        echo "GITHUB_REPOSITORY_LOWERCASED=$GITHUB_REPOSITORY_LOWERCASED" >> $GITHUB_ENV
        echo "REF=$REF" >> $GITHUB_ENV
        echo "SHA_SHORT=$SHA_SHORT" >> $GITHUB_ENV

    - name: Login to docker registry
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
      env:
        DOCKERHUB_REGISTRY_USER: ${{ secrets.DOCKERHUB_REGISTRY_USER }}
        DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}

    - name: Build nginx (PRs)
      id: docker_build_pr_nginx
      # Run only on pull requests
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.nginx.prod
        context: '.'
        platforms: linux/amd64
        push: false
        tags: |
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-nginx
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-${{ env.SHA_SHORT }}-nginx
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Build php (PRs)
      id: docker_build_pr_php
      # Run only on pull requests
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.php.prod
        context: '.'
        platforms: linux/amd64
        push: false
        tags: |
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-php
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-${{ env.SHA_SHORT }}-php
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push nginx (master)
      id: docker_build_master_nginx
      # Run only on master
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.nginx.prod
        context: '.'
        platforms: 'linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x'
        push: true
        tags: |
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:nginx
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-nginx
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-${{ env.SHA_SHORT }}-nginx
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Build and push php (master)
      id: docker_build_master_php
      # Run only on master
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.php.prod
        context: '.'
        platforms: 'linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x'
        push: true
        tags: |
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:php
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-php
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-${{ env.SHA_SHORT }}-php
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build and push nginx(release)
      id: docker_build_release_nginx
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.nginx.prod
        context: '.'
        platforms: 'linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x'
        push: true
        tags: |
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:nginx
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-nginx
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-${{ env.SHA_SHORT }}-nginx
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Build and push php (release)
      id: docker_build_release_php
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile.php.prod
        context: '.'
        platforms: 'linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x'
        push: true
        tags: |
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:php
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-php
          ${{ env.GITHUB_REPOSITORY_LOWERCASED }}:${{ env.REF }}-${{ env.SHA_SHORT }}-php
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: List docker images
      run: docker images

    - name: Clean-up
      run: docker logout
      if: always()

  update-draft-release:
    needs: [test, build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-draft-release:
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
          name: ${{ github.ref_name }} # E.g. 'master' or 'v1.2.3'
          tag: ${{ github.ref_name }} # E.g. 'master' or 'v1.2.3'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-dockerhub-description:
    needs: [test, build]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_REGISTRY_USER }}
        password: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}
        repository: startersclan/asp
        short-description: ${{ github.event.repository.description }}
